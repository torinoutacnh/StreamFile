/**
 * Minified by jsDelivr using Terser v5.3.5.
 * Original file: /npm/clipboard@2.0.8/src/clipboard.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Emitter from"tiny-emitter";import listen from"good-listener";import ClipboardAction from"./clipboard-action";function getAttributeValue(t,e){const i="data-clipboard-"+t;if(e.hasAttribute(i))return e.getAttribute(i)}class Clipboard extends Emitter{constructor(t,e){super(),this.resolveOptions(e),this.listenClick(t)}resolveOptions(t={}){this.action="function"==typeof t.action?t.action:this.defaultAction,this.target="function"==typeof t.target?t.target:this.defaultTarget,this.text="function"==typeof t.text?t.text:this.defaultText,this.container="object"==typeof t.container?t.container:document.body}listenClick(t){this.listener=listen(t,"click",(t=>this.onClick(t)))}onClick(t){const e=t.delegateTarget||t.currentTarget;this.clipboardAction&&(this.clipboardAction=null),this.clipboardAction=new ClipboardAction({action:this.action(e),target:this.target(e),text:this.text(e),container:this.container,trigger:e,emitter:this})}defaultAction(t){return getAttributeValue("action",t)}defaultTarget(t){const e=getAttributeValue("target",t);if(e)return document.querySelector(e)}static isSupported(t=["copy","cut"]){const e="string"==typeof t?[t]:t;let i=!!document.queryCommandSupported;return e.forEach((t=>{i=i&&!!document.queryCommandSupported(t)})),i}defaultText(t){return getAttributeValue("text",t)}destroy(){this.listener.destroy(),this.clipboardAction&&(this.clipboardAction.destroy(),this.clipboardAction=null)}}export default Clipboard;
//# sourceMappingURL=/sm/da758759e404bc4de02effb18b527e050f7f99b2c5350333877fb571ca10efcd.map